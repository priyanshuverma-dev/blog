<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Beginners on My Writings - Priyanshu Verma</title><link>https://priyanshuverma-dev.github.io/blogs/tags/beginners/</link><description>Recent content in Beginners on My Writings - Priyanshu Verma</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Tue, 20 Aug 2024 16:59:24 +0000</lastBuildDate><atom:link href="https://priyanshuverma-dev.github.io/blogs/tags/beginners/index.xml" rel="self" type="application/rss+xml"/><item><title>Fluvio - An open-source In-motion data framework.</title><link>https://priyanshuverma-dev.github.io/blogs/fluvio---an-open-source-in-motion-data-framework./</link><pubDate>Tue, 20 Aug 2024 16:59:24 +0000</pubDate><guid>https://priyanshuverma-dev.github.io/blogs/fluvio---an-open-source-in-motion-data-framework./</guid><description>Hello enthusiasts,
Today we are going to learn about Fluvio work with this technology. This post is not about theory it&rsquo;s a practical based article. You can checkout Fluvio&rsquo;s own blogs to learn about fluvio deep.
Why to read this article? Yes, you can find the documentation about Fluvio in the corners of internet but you can&rsquo;t get a end-to-end project that&rsquo;s what this article provides you. Believe me at the end you will find yourself confident with fluvio and one simple yet complex project. Let&rsquo;s dive right in!</description></item><item><title>Let's integrate auth.js with Supabase!</title><link>https://priyanshuverma-dev.github.io/blogs/lets-integrate-auth.js-with-supabase/</link><pubDate>Mon, 05 Aug 2024 13:37:53 +0000</pubDate><guid>https://priyanshuverma-dev.github.io/blogs/lets-integrate-auth.js-with-supabase/</guid><description>Hello everyone, Recently I was building a chat app. It was very quick to build a real-time app with supabase. I was amazed. I used this tech stack:
Next.js Auth.js (next-auth) Supabase I am not going to cover full project in this post feel free to comment for that. For now We are going to setup authentication with auth.js and supabase. So, Let&rsquo;s begain.
Step 1: Create a next.js project. There are many ways to create next.js project. I am going to use Bun. It is faster then alternatives as of now ðŸ˜Š.</description></item><item><title>Checkcup - Browserless Puppetter Project Build.</title><link>https://priyanshuverma-dev.github.io/blogs/checkcup---browserless-puppetter-project-build./</link><pubDate>Mon, 10 Jun 2024 09:48:16 +0000</pubDate><guid>https://priyanshuverma-dev.github.io/blogs/checkcup---browserless-puppetter-project-build./</guid><description>Checkcup Checkcup is a website monitoring tool that fetches the status of websites along with screenshots and active status. It is built using Next.js for the frontend and Puppeteer with Browserless in the backend.
Features Fetches website status including HTTP status code, response time, and active status. Captures screenshots of websites for visual verification. Supports monitoring multiple websites simultaneously. Demo {% embed https://github.com/priyanshuverma-dev/quine-checkcup %}
Live Preview You can view a live preview of Checkcup here.</description></item></channel></rss>